 
***QUE****
A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.



****SOLUTION****


class Solution 
{
    public boolean isPalindrome(String s)
	{
		String newStr="";
		for (int i=0;i<s.length();i++ )
		{
            if(s.charAt(i)==32 || !(s.charAt(i)>='a' && s.charAt(i)<='z' || s.charAt(i)>='A' && s.charAt(i)<='Z' || s.charAt(i)>=48 && s.charAt(i)<=57))
			{
				continue;
			}
			else
			{
				newStr = newStr + s.charAt(i);
			}

            //or
			/*if(	(s.charAt(i)>=48 && s.charAt(i)<=57) || (s.charAt(i)>='a' && s.charAt(i)<='z') || (s.charAt(i)>='A' && s.charAt(i)<='Z') )
			{
				newStr = newStr + s.charAt(i);
			}*/

            //or

            /*char ch = s.charAt(i);
            // Only include letters and digits
            if (Character.isLetterOrDigit(ch)) 
            {
                newStr = newStr + ch;
            }*/
		}
		
		boolean ans;
		String newStr1 = "";
		for(int i=newStr.length()-1;i>=0;i--)
		{
			newStr1=newStr1+newStr.charAt(i);
		}
		//System.out.println("New String One "+newStr1.toLowerCase());

		if(newStr1.toLowerCase().equals(newStr.toLowerCase()))
		{
			ans = true;
		}
		else
		{
			ans=false;
		}

		//System.out.println("String is"+newStr.toLowerCase());
		return ans;
    }
}