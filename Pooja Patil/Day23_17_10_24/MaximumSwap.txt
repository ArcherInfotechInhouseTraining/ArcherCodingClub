 
***QUE****
You are given an integer num. You can swap two digits at most once to get the maximum valued number.

Return the maximum valued number you can get.

 

Example 1:

Input: num = 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:

Input: num = 9973
Output: 9973
Explanation: No swap.
 

Constraints:

0 <= num <= 108



****SOLUTION****

class Solution {
    public int maximumSwap(int num) {

        String str = Integer.toString(num);

        int digit[] = new int[str.length()];
        for(int i=0;i<str.length();i++)
        {
            digit[i] = str.charAt(i)-'0';
        }

        int last[]= new int[10];
        for(int i=0;i<digit.length;i++)
        {
            last[digit[i]]=i;
        }

        for(int i=0;i<digit.length;i++)
        {
            for(int max = 9 ;max>digit[i];max--)
            {
                if(last[max]>i)
                {
                     // Swap the digits
                    int temp = digit[i];
                    digit[i] = digit[last[max]];
                    digit[last[max]] = temp;

                     StringBuilder newString = new StringBuilder();
                    for (int x : digit) {
                        newString.append(x);
                    }
                    return Integer.parseInt(newString.toString());
                }
            }
        }
        
        return num;
    }
}