Given an array arr of size n which contains elements in range from 0 to n-1, you need to find all the elements occurring more than once in the given array. Return the answer in ascending order. If no such element is found, return list containing [-1]. 

Examples:

Input: n = 4, arr[] = [0,3,1,2]
Output: -1
Explanation: There is no repeating element in the array. Therefore output is -1.
Input: n = 5, arr[] = [2,3,1,2,3]
Output: 2 3 
Explanation: 2 and 3 occur more than once in the given array.



output:-


// } Driver Code Ends
class Solution {
  public:
    vector<int> duplicates(vector<int> arr) {
        // code here
        vector<int>res;
        for(int i=0;i<arr.size();i++)
        {
            int index=abs(arr[i]);
            if(arr[index]>=0)
            {
                arr[index]=-arr[index];
            }
            else
            {
                if (find(res.begin(), res.end(), index) == res.end())
                {
                    res.push_back(index);
                }
            }
        }
        
        
        if(res.empty())
        {
            return {-1};
        }
        
        sort(res.begin(), res.end());
        
        return res;
    }   
};


